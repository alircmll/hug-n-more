// MODAL MENU NAVBAR +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
.navbar {
  height: 75px;
  padding: $pad;
  transition: all ease 500ms;
}

#modalNavigation {
  background-color: $contrast; // BG DU MENU

  .logo {
    font-family: "Poppins" !important;
    letter-spacing: 10px;
  }

  .logo-modal img {
    transition: all 0.26s ease;
    padding-bottom: 1rem;
  }

  .list-group-item {
    border: transparent 0 solid;
    background-color: transparent;
  }

  // MENU W/ ICONS FOR PROFIL / LOGOUT
  .footer-menu {
    margin: 0px;
  }

  // SEPARATION
  hr {
    border: 1px $primary solid;
    width: 100%;
  }

  // EFFET UNDERLINE MENU HOVER
  span {
    position: relative;

    &::before {
      content: '';
      position: absolute;
      left: 50%;
      bottom: 0;
      width: 100%;
      height: 2px;
      background-color: $secondary;
      transform-origin: center;
      transform: translate(-50%, 0) scaleX(0);
      transition: transform 0.3s ease-in-out;
    }

    &:hover::before {
      transform: translate(-50%, 0) scaleX(1);
    }

  }

  .close {
    color: white;
    opacity: 1;
    padding: 3.5rem;
    position: absolute;
    top: 0;
    right: 0;
    z-index: 50;
    font-size: 3vh;
  }

  .modal-dialog {
    margin: 0 auto;
    max-width: 300px;
    min-width: 40vw;
    display: flex;
    height: 100%;
    align-items: center;
  }

  .modal-content {
    background-color: transparent;
    box-shadow: none;
    border: none;
  }

  #menuModal.list-group {
    text-align: left;
    margin: 0 auto;
    width: 100%;

    .menu-item {
      font-size: 30px;
      line-height: 0.5em;
    }
    // COULEURS MENU 
    a {
      text-transform: uppercase;
      font-size: 16px; // MENU ZISE
      color: $primary;
      font-weight: 700;
      letter-spacing: 0em;
      transition: all 300ms ease;
      line-height: 0px;
      text-decoration: none;

      &:hover {
        color: $secondary;
        transition: ease 300ms;

        &:before {
          opacity: 1;
          transition: ease 300ms;
        }
      }
    }
  }
}

// MENU DOTS

$pix-size: 6px; // <---- Definir la taille du menu

#dotsMenuClose {
  position: absolute;
  top: 15.5px;
  right: 32px;
}

.menu {
  position: relative;
  display: block;
  width: ($pix-size*5);
  height: ($pix-size*5);
  z-index: 1000;
  top: -3px;

  a {
    margin: 0;
    padding: 0;
  }

  .pix {
    position: absolute;
    width: $pix-size;
    height: $pix-size;
    background-color: $primary;
    border-radius: 100%;
    transition: 0.2s ease-in-out;

    $num: 0;

    @for $i from 1 through 9 {
      @if $i%3==1 {
        $num: 0;
      }

      &:nth-of-type(#{$i}) {
        transform: translate(($pix-size*2)*$num, ($pix-size*2)*(floor(($i - 1)/3)))
      }

      $num: $num+1;
    }
  }

  &:hover {
    .pix {
      background-color: $primary-dark;

      &:nth-of-type(1) {
        transform: translate(-($pix-size), -($pix-size));
      }

      &:nth-of-type(3) {
        transform: translate(($pix-size*5), -($pix-size));
      }

      &:nth-of-type(7) {
        transform: translate(-($pix-size), ($pix-size*5));
      }

      &:nth-of-type(9) {
        transform: translate(($pix-size*5), ($pix-size*5));
      }
    }
  }

  &.active {
    .pix {
      &:nth-of-type(1) {
        transform: translate(0, 0);
      }

      &:nth-of-type(2) {
        transform: translate($pix-size, $pix-size);
      }

      &:nth-of-type(3) {
        transform: translate(($pix-size*4), 0);
      }

      &:nth-of-type(4) {
        transform: translate($pix-size, ($pix-size*3));
      }

      &:nth-of-type(6) {
        transform: translate(($pix-size*3), $pix-size);
      }

      &:nth-of-type(7) {
        transform: translate(0, ($pix-size*4));
      }

      &:nth-of-type(8) {
        transform: translate(($pix-size*3), ($pix-size*3));
      }

      &:nth-of-type(9) {
        transform: translate(($pix-size*4), ($pix-size*4));
      }
    }

    &:hover {
      .pix {
        &:nth-of-type(1) {
          transform: translate(-($pix-size), -($pix-size));
        }

        &:nth-of-type(2) {
          transform: translate(($pix-size/2), ($pix-size/2));
        }

        &:nth-of-type(3) {
          transform: translate(($pix-size*5), -($pix-size));
        }

        &:nth-of-type(4) {
          transform: translate(($pix-size/2), ($pix-size*3.5));
        }

        &:nth-of-type(6) {
          transform: translate(($pix-size*3.5), ($pix-size/2));
        }

        &:nth-of-type(7) {
          transform: translate(-($pix-size), ($pix-size*5));
        }

        &:nth-of-type(8) {
          transform: translate(($pix-size*3.5), ($pix-size*3.5));
        }

        &:nth-of-type(9) {
          transform: translate(($pix-size*5), ($pix-size*5));
        }
      }
    }
  }
}